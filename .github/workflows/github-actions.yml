name: GitHub Actions for CI/CD
on: [push]
jobs:
  output_summary:
    runs-on: ubuntu-latest
    steps:
      - name: echo summary
        run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install package manager
        run: |
          python -m pip install --upgrade pip
          pip install poetry --no-cache-dir --disable-pip-version-check --no-clean
      - name: transform poetry.lock to requirements.lock
        run: |
          poetry export --dev -f requirements.txt -o requirements.lock
      - name: Install dependencies
        run: |
          pip install -r requirements.lock
      - name: Lint with flake8
        run: |
          flake8 . --count --show-source --statistics
      - name: Lint with black
        run: |
          if [ ${{matrix.python-version}} -eq "3.9" ] ; then black . -t py39 --check ; fi
      - name: Lint with isort
        run: |
          if [ ${{matrix.python-version}} -eq "3.9" ]; isort . --show-files --diff --py 39; fi
      - name: compile
        run: |
          python -m compileAll .
      - name: Test with pytest
        run: |
          pytest
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
